[{"content":"About This project, conducted as a collaborative effort by myself and three fellow engineering students (Nathan DUNAND, Clément LAISNÉ, Corentin HUVELIN), represents our fourth-year engineering school project in the field of cyberdefense.\nThis article presents an engineering project aimed at automating the detection of information manipulation, specifically focusing on the field of computational influence operations. These operations involve actions taken to manipulate public opinion through digital media and social networks. The objective is to develop a tool capable of detecting online disinformation using a dataset.\nThe project relies on indicators from scientific literature, including word count, tweet length, hashtag frequency, sentiment score, and others. A three-step methodology involving data processing, visualization generation, and comparative analysis aids in identifying suspicious accounts and datasets. Additionally, potential enhancements such as expanding data collection across platforms and languages, and incorporating machine learning for account classification, are discussed.\nFor a detailed analysis and further insights, please refer to the original article.\n","permalink":"https://garnajee.github.io/posts/infomanip/","summary":"Development of an automation tool to detect information manipulation in real time as part of L2I operations - 4th year engineering school project.","title":"Real-time detection of information manipulation - Computational Influence Struggle (L2I)."},{"content":"About The source code is available on github.\nThis is a web application, created to help you manually delete files present in the (e.g. Transmission completed/) download folder but not in the (e.g. Jellyfin) medias/ folder. If you have separated folders it\u0026rsquo;ll also works.\nTake a look at the screenshot of the web-app here.\nHow it works A recursive comparison according to the inodes of the files is made between the completed/ (download) folder (e.g. on the Transmission side) and the folders where the media are stored (e.g. on the Jellyfin side).\nExample 1:\n├── completed # Transmission side │ ├── folder1 │ ├── ... │ ├── files │ └── ... └── medias # Jellyfin side ├── movies │ ├── folders │ └── ... └── series ├── folders └── ... Example 2:\n├── completed # Transmission side │ ├── folder1 │ ├── ... │ ├── files │ └── ... ├── movies # Jellyfin side │ ├── files │ ├── folders │ │ └── ... │ └── ... └── series # Jellyfin side ├── files └── folders └── ... All the files present on the side of Jellyfin are the latest versions that we want to keep. So, all we want to remove is everything that is present on the Transmission side but not on the Jellyfin side.\nIf the deleted file was in a folder:\nif the folder is now empty, then the folder is deleted if the folder does not contain other files with extension \u0026lsquo;.mkv\u0026rsquo;, \u0026lsquo;.mp4\u0026rsquo;, \u0026lsquo;.avi\u0026rsquo;, \u0026lsquo;.mov\u0026rsquo;, then the folder is deleted if the folder does not contain subfolder(s), the folder is deleted Proof it works I\u0026rsquo;m using this app on a Synology NAS.\nI have 2x6TB HDD in RAID 1. The filesystem of my main volume (/volume1) is in Btrfs.\nTo try if the file was properley deleted and if I recovered the storage, I ran this command before and after the deletion of the file:\n$ btrfs fi usage /volume1/ -g I deleted a file of about 1,9 GB. Here is the diff before and after the deletion:\nOverall: Device allocated: 2884.02GiB Device unallocated: 2693.98GiB Device missing: 0.00GiB - Used: 2843.89GiB - Free (estimated): 2732.34GiB (min: 1385.35GiB) + Used: 2842.04GiB + Free (estimated): 2734.20GiB (min: 1387.21GiB) Data ratio: 1.00 Metadata ratio: 2.00 Global reserve: 0.28GiB (used: 0.00GiB) -Data,single: Size:2880.01GiB, Used:2841.64GiB +Data,single: Size:2880.01GiB, Used:2839.79GiB /dev/mapper/cachedev_0 2880.01GiB How to install Nothing more simple than to use the docker-compose file.\nFirst option: (like the example above) you have one folder for all your media, use this file: version: \u0026#39;3.9\u0026#39; services: removarr: image: ghcr.io/garnajee/removarr:latest container_name: removarr restart: always environment: - PUID=1030 - PGID=100 volumes: - \u0026#39;/your/path/completed/:/data/completed\u0026#39; - \u0026#39;/your/path/medias/:/data/medias\u0026#39; ports: - \u0026#39;127.0.0.1:8012:5000\u0026#39; Second option: you have several folders not in the same place, use this file: version: \u0026#39;3.9\u0026#39; services: removarr: image: ghcr.io/garnajee/removarr:latest container_name: removarr restart: always environment: - PUID=1030 - PGID=100 volumes: - \u0026#39;/your/path/completed/:/data/completed\u0026#39; - \u0026#39;/your/path/movies/:/data/movies\u0026#39; - \u0026#39;/your/path/series/:/data/series\u0026#39; ports: - \u0026#39;127.0.0.1:8012:5000\u0026#39; The application will be available at \u0026lt;you_ip\u0026gt;:8012.\nUser/Group Identifiers UserID (PUID) and GroupID (PGID) are optionals. To find these ids just type id \u0026lt;username\u0026gt; as below:\n$ id username uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup) Volumes /tmp/test/completed/: change this by the path of your download folder\n/tmp/test/medias/ : change this by the path of your medias folder\nPort 8012: change this port to suit your needs.\nTodo modify README (setup installation, how to use, how to build, screenshot,\u0026hellip;) - needs to be improved get hash of torrent file to delete it (need to mount one more volume) delete empty folder (ignore other files different than .mkv/avi/\u0026hellip;) add total size of all files add size of each file in a column create a checkbox to delete multiples files at once create a button to delete all files at once =\u0026gt; use the \u0026ldquo;Select All\u0026rdquo; button sort table by alphabetic order and file size add an \u0026ldquo;unwanted\u0026rdquo; button, hide files to avoid deleting them by mistake make the app more responsive Build To build this application, follow these steps:\nbuild the Dockerfile: $ docker build -t \u0026lt;your_image_name\u0026gt; . run the image: $ docker run -p 5000:5000 -v /your/path/completed:/data/completed -v /your/path/medias:/data/medias \u0026lt;your_image_name\u0026gt; If you want to use a docker-compose.yml instead of the Dockerfile, then use this example:\nversion: \u0026#39;3.9\u0026#39; services: removarr: build: . container_name: removarr restart: always environment: - PUID=1030 - PGID=100 volumes: - \u0026#39;/your/path/completed/:/data/completed\u0026#39; - \u0026#39;/your/path/medias/:/data/medias\u0026#39; ports: - \u0026#39;127.0.0.1:8012:5000\u0026#39; you can now build this docker-compose.yml: $ docker-compose build and finally, run: $ docker-compose up -d ","permalink":"https://garnajee.github.io/posts/removarr/","summary":"A web app to list and delete files in your download folder but not in your media folder.","title":"Removarr"},{"content":"About In this very complete guide (available here on github), you\u0026rsquo;ll be able to install from scratch a perfect home-server for a full media donwload and stream automation\nThis is my near-perfect docker-compose for my streaming server.\nYou\u0026rsquo;ll find two 2 main docker-compose, one to create the streaming services and the other one to access them through a reverse proxy.\nThe only thing to modify is the .env file to suits your setup.\nHere, we are going to install everything under /opt/chill/ (all services for full automation) and /opt/docker/ (reverse proxy).\nTo install everything, just follow this Readme in this order.\nRequirements docker docker-compose a server maybe? I deployed these docker-compose on 2 servers: a Synology DS923+ and a custom server create docker user Synology Server:\nDownload the Docker App available on Synology Package Center Create a docker user once it\u0026rsquo;s done, connect on SSH and type id \u0026lt;username\u0026gt; and write down the uid and gid respectively PUID and PGID for the .env. Connect on SSH and download docker-compose latest command version: if you are on a system that support apt packages, you can use the compose plugin: apt install docker-compose-plugin (it\u0026rsquo;s better for updates) check version: $ docker compose version note: with the compose plugin you don\u0026rsquo;t need the - between docker and compose or you can use the binary: (I use the binary) $ curl -SL https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose # check version $ docker-compose version Medias Server What\u0026rsquo;s inside This docker-compose contains:\nTransmission-openvpn Jackett FlareSolverr Jellyfin Ombi Radarr Sonarr Removarr Installation Delete previous installation be careful $ rm -rf /opt/chill Create the structure for every services $ mkdir -p /opt/chill/{transovpn/{config,ratio},jackett/config,jellyfin/config,ombi/config,radarr/config,sonarr/config,bazarr/config,storage/downloads/{completed,incomplete,watch,medias/{movies,series}}} Here is what it\u0026rsquo;s going to create:\nopt └── chill ├── jackett │ └── config ├── jellyfin │ └── config ├── ombi │ └── config ├── radarr │ └── config ├── sonarr │ └── config ├── storage │ └── downloads │ ├── completed │ ├── incomplete │ ├── medias │ │ ├── movies │ │ └── series │ └── watch └── transovpn ├── config └── ratio The /opt/chill/transovpn/ratio/ folder is used to fake your upload stats on (semi-)private indexers. See Fake Ratio.\nThe /opt/chill/storage/downloads/watch/ folder is used when you manually put .torrent files, so it\u0026rsquo;s going to be downloaded automatically without any access to the Transmission interface.\nTo check everything was properly created $ ls -lR /opt/chill Download the docker-compose-medias.yml and .env-example in /opt/chill/, and rename them:\n$ cd /opt/chill $ wget https://raw.githubusercontent.com/garnajee/home-server/master/docker-compose-medias.yml -O docker-compose.yml $ wget https://raw.githubusercontent.com/garnajee/home-server/master/.env-example -O .env Modify .env Normally, you don\u0026rsquo;t need to modify the docker-compose.yml file. Only the .env file.\nlist of VPN PROVIDERS local subnet mask for NETWORKIP: ip route | awk '!/ (docker0|br-)/ \u0026amp;\u0026amp; /src/ {print $1}' PUID and PGID Create a docker network This part is optional. It\u0026rsquo;s going to be created automatically. But you can still do it manually if you want.\nI did it manually because of the reverse proxy causing errors if I attached it to the automatically created docker subnet.\nAll these images are going to be in the same docker network. To avoid any further conflict, just create it before running the docker-compose.\nHere the subnet is 10.10.66.0/24. If you want to change this by something else, you\u0026rsquo;ll need to modify the docker-compose.yml too. But remember, it\u0026rsquo;s just a subnet inside docker, it\u0026rsquo;s not going to affect your local network.\n$ docker network rm net-chill $ docker network create net-chill -d bridge --subnet 10.10.66.0/24 Run! For the first execution of the docker-compose, I recommend to use this command, to check if there is no errors:\nMove the docker-compose.yml and .env file in /opt/chill/.\n$ cd /opt/chill/ $ docker-compose up It\u0026rsquo;s going to download all the images, and start all the services.\nBy the way, each request made by Jackett and FlareSolverr goes through the VPN.\nNow, if you don\u0026rsquo;t see any red lines among the hundreds of lines that have just scrolled through the terminal, it\u0026rsquo;s usually a good sign.\nSo you can now stop this by pressing CTRL+c (one or two times to force stop), and then run the docker-compose again, but in background this time:\n$ cd /opt/chill/ $ docker-compose up -d Check the status of each docker:\n$ docker ps -a Status should be Up.\nCheck VPN connection Now everything is up, just to be sure, you can check if Transmission goes through VPN:\n$ docker exec -it transovpn curl ifconfig.co XXX.XXX.XXX.XXX And then check the location of this ip address here for example.\nUpdate docker\u0026rsquo;s images Update one specific image To update one specific docker image:\n$ cd /opt/chill $ docker-compose stop \u0026lt;container_name\u0026gt; $ docker-compose rm \u0026lt;container_name\u0026gt; $ docker-compose pull \u0026lt;container_name\u0026gt; $ docker-compose up -d Update all images To update all images:\n$ docker-compose down $ docker-compose pull $ docker-compose up -d Access services To access services: (IP is the ip of your server)\nService Address Transmission-openvpn \u0026lt;IP\u0026gt;:8000 Jackett \u0026lt;IP\u0026gt;:8001 FlareSolverr \u0026lt;IP\u0026gt;:8002 Jellyfin \u0026lt;IP\u0026gt;:8003 Ombi \u0026lt;IP\u0026gt;:8004 Radarr \u0026lt;IP\u0026gt;:8010 Sonarr \u0026lt;IP\u0026gt;:8011 Removarr \u0026lt;IP\u0026gt;:8012 Reverse Proxy To access Jellyfin and Ombi from outside your local network, you\u0026rsquo;ll need to set up a reverse proxy.\nFor that purpose, I\u0026rsquo;m going to use Nginx Proxy Manager.\nYou also need to open 2 ports on your router:\nApplication/Service Internal Port External Port Protocol Equipment HTTP 8080 80 TCP/UDP Your-Server HTTPS 4443 443 TCP/UDP Your-Server What\u0026rsquo;s inside This docker-compose contains:\nNginx Proxy Manager Maria DB Aria Installation Create the directory structure $ mkdir -p /opt/docker/{nginx-proxy-manager,npm-db} Download the docker-compose-rp.yml in /opt/docker/, and rename it:\n$ cd /opt/docker $ wget https://raw.githubusercontent.com/garnajee/home-server/master/docker-compose-rp.yml -O docker-compose.yml I didn\u0026rsquo;t create a .env file for this docker-compose mainly as this service is not going to be exposed on the web.\nFeel free to modify user, password, name, and so on directly in the docker-compose.yml.\nRun Simply execute this:\n$ cd /opt/docker/ $ docker-compose up Again, it\u0026rsquo;s going to download the docker images. Check if there is no error, and if it\u0026rsquo;s good, hit CTRL+c to stop everything and run this command:\n$ docker-compose up -d The service will be accessible at: \u0026lt;IP\u0026gt;:81.\nThe default Admin User is:\nemail: admin@example.com password: changeme You\u0026rsquo;ll be ask to change these informations after the first logging.\nGet a domain name \u0026amp; SSL certificate I bought a domain name from OVH. If you do the same, follow this:\ncreate an account on OVH buy a domain name once your domain name has been activated, create the necessary token for SSL use this link Make sure to write everything You\u0026rsquo;ll need something like this:\ndns_ovh_endpoint = ovh-eu dns_ovh_application_key = 109XXX7595XXXXXa dns_ovh_application_secret = a1z2g3y435TGcazbXXXXXXXXa45e dns_ovh_consumer_key = agf6hU1g13uj86XXXXXXXXXfv1l2n3g4j To create your certificate, go back on NPM (\u0026lt;IP\u0026gt;:81), \u0026ldquo;SSL Certificates\u0026rdquo; tab, \u0026ldquo;Add \u0026hellip;\u0026rdquo; fill the information for: *.yourdomain.com and yourdomain.com Setup all the services Transmission Nothing to setup or maybe the \u0026ldquo;Speed Limits\u0026rdquo; depending on your internet connection.\nJackett Check the box:\nExternal access Cache enabled (recommended) Add these values:\n\u0026ldquo;Cache TTL (seconds):\u0026rdquo; 2100 \u0026ldquo;Cache max results per indexer:\u0026rdquo; 1000 \u0026ldquo;FlareSolverr API URL:\u0026rdquo; http://10.10.66.100:8191 # if you don\u0026rsquo;t change anything on the docker-compose, that\u0026rsquo;s it \u0026ldquo;FlareSolverr Max Timeout (ms):\u0026rdquo; 100000 Leave the rest blank.\nAdd your indexer(s).\nRadarr \u0026amp; Sonarr Follow these guides.\nThis is a config to prefer download WEB-DL 1080p x264 NOT 10bit files.\nRadarr Settings Format: Name: X|req|neg ; regex\nName: name of the condition\nX: neither \u0026ldquo;Negate\u0026rdquo; nor \u0026ldquo;Required\u0026rdquo; checked\nregex: Regular Expression\nIf there is something before the condition, it means that when you clicked \u0026ldquo;import\u0026rdquo;, you should choose the something instead of Release title.\nMedia Management: check Replace Illegal Characters Color Replacement: Delete Path /downloads/medias/movies Profiles: Quality: Not changed Custom Formats: global 10bit: req ; \\b10bit\\b 3D: 3D: X ; \\b3d|sbs|half[ .-]ou|half[ .-]sbs\\b BluRay3D: X ; \\b(BluRay3D)\\b x265 (HD): x265/HEVC: req ; [xh][ ._-]?265|\\bHEVC(\\b|\\d) Resolution Not 2160p: reg+neg ; R2160p HDR-10-10+: HDR10+: req ; \\bHDR10(\\+|P(lus)?\\b) HDR10: req ; \\bHDR10(\\b[^+|Plus]) Not DV HDR10: neg+req ; ^(?=.*\\b(DV|DoVi|Dolby[ .]?Vision)\\b)(?=.*\\b(HDR(10)?(?!\\+))\\b) HDR: req ; \\b(HDR)\\b Not DV ; neg+req ; \\b(dv|dovi|dolby[ .]?vision)\\b Not PQ: neg+req ; \\b(PQ)\\b Not HLG: neg+req ; \\bHLG(\\b|\\d) Not SDR: neg+req ; \\bSDR(\\b|\\d) Release Group Not RlsGrp (Missing HDR): neg+req ; \\b(FraMeSToR|HQMUX|SiCFoI)\\b Custom Formats: French settings French Audio: Language French Language: X ; French French Original Version: X ; \\bVOF\\b TRUEFRENCH: X ; \\b(TRUEFRENCH|VFF?)\\b French International: X ; \\bVF(I|\\d)\\b Multi Audio: MULTi: X ; \\b(MULTi)(\\d|\\b) VO and VF: X ; ^(?=.*\\b(VO)\\b)(?=.*\\b(VF(F|I)?)\\b) Multi French: MULTi: req ; \\b(MULTi)(\\b|\\d) Language Original Audio: req ; Original Language French Audio: req ; French VFF: req ; \\b(TRUEFRENCH|VFF)\\b Indexer: Add Torznab ; on Jackett click on \u0026ldquo;Copy Torznab Feed\u0026rdquo; and paste it in \u0026ldquo;URL\u0026rdquo; and copy-paste the API key pf jackett in API ; check everything ; select the categories you want Download Client: add transmission host: 10.10.66.100 port: 9091 set username and password recent priority: last older priority: last check Remove Completed Remote Path Mappings: Host: 10.10.66.100 (Transmission) ; Remote Path: /data/completed ; Local Path: /data/completed Sonarr Settings Media Management: check Replace Illegal Characters Path /downloads/medias/series Profiles: Language Profile: Multi: check English and French, and move them to the top of the list (English first, then French) Release Profiles You can add /\\bHDR(\\b|\\d)/ and 10bit at `-10000`` to avoid HDR and 10bit releases For Multi audio (VO+VFF): /\\bMULTi(\\b|\\d)/i ; 10000 /\\bMULTi(\\b|\\d)/i ; 10000 /\\bVOF(\\b|\\d)/i ; 8000 /\\b(TRUEFRENCH|VFF?)(\\b|\\d)/i ; 6000 /\\bFR(A|ENCH)?(\\b|\\d)/i ; 4000 /\\bFR(A|ENCH)?(\\b|\\d)/i ; 3000 The others settings are the same as in radarr. Jellyfin Follow the steps, it\u0026rsquo;s easy.\nCreate an API key for Ombi.\nCreate all the users who are going to access to Jellyfin and Ombi.\nTo have better images for your libraries, you can use these images.\nOmbi In the setting page:\n\u0026ldquo;Configuration\u0026rdquo; tab: (General) base URL: /ombi (User Management) check the box. It means, that the Jellyfin account (user/password) is the same for Ombi. \u0026ldquo;Media Server\u0026rdquo; tab: Hostname/IP: put the internal docker ip: 10.10.66.103. Port: 8096 API key: the one you created just before then load libraries, submit. Now for every service you\u0026rsquo;re going to add (Sonarr, Radarr, \u0026hellip;) make sure to write the internal docker ip address and internal port of the application. The API keys are available in Sonarr/Radarr/\u0026hellip; settings tab.\nBonus Don\u0026rsquo;t want to use a reverse proxy?\nYou can use a VPN:\nOfficial Synology VPN package -\u0026gt; need to open port on your router And if you don\u0026rsquo;t want to open port on your router (or if you can\u0026rsquo;t):\nTailscale on Synology CloudFlare Tunnel Pay attention to not use CloudFlare tunnel for Jellyfin streaming, you may be banned for breaking TOS.\nWebhooks I provide some webhooks for Jellyfin. These webhooks are used for:\nDiscord Microsoft Teams WhatsApp (old-method) WhatsApp (new-method) First of all, you need to install the Jellyfin plugin called \u0026ldquo;Webhooks\u0026rdquo;: Jellyfin \u0026gt; Dashboard \u0026gt; Plugins \u0026gt; Catalog \u0026gt; Webhook\nThen, you need to restart Jellyfin:\n$ cd /opt/chill/ $ docker-compose restart jellyfin Now, go back to Jellyfin in the Plugins tab and click on Webhook.\nThe \u0026ldquo;Server Url\u0026rdquo; is your Jellyfin URL. If you expose it on internet, it\u0026rsquo;s something like this: https://yourdomainname.com/jellyfin\nIf you don\u0026rsquo;t have a domain name, Jellyfin will not be able to display images (posters) in the Discord/Teams webhooks.\nTo add a Discord webhook:\nclick on \u0026ldquo;Add Discord Destination\u0026rdquo; \u0026ldquo;Webhook Name\u0026rdquo;: what you want \u0026ldquo;Webhook Url\u0026rdquo;: the discord webhook url \u0026ldquo;Notification type\u0026rdquo;: if you want to receive notification when a new item (movie/tv show/\u0026hellip;) is added, check \u0026ldquo;Item Added\u0026rdquo; or when a user is locked out (because of too much wrong password during connection), check \u0026ldquo;User Locked Out\u0026rdquo; or when a user is created/deleted, when a password is changed, \u0026hellip; (for every use case check this file), check \u0026ldquo;Authentication *\u0026rdquo; and \u0026ldquo;User *\u0026rdquo; \u0026ldquo;User Filter\u0026rdquo;: personally, I don\u0026rsquo;t check anything here \u0026ldquo;Item Type\u0026rdquo;: check everything (depending on your webhook template) except \u0026ldquo;Send All Properties\u0026rdquo; \u0026ldquo;Template\u0026rdquo;: (copy and paste the content) discord-item.handlebars discord-users-locked-out.handlebars discord-users.handlebars \u0026ldquo;Avatar Url\u0026rdquo;: just change the avatar profile picture directly on Discord \u0026ldquo;Webhook Username\u0026rdquo;: should not be empty, but you can write what you want, the real username is defined directly in Discord \u0026ldquo;Mention Type\u0026rdquo;: I never used this \u0026ldquo;Embed Color\u0026rdquo;: color of the embedded message Then click save.\nTo add a Microsoft Teams webhook:\nclic on \u0026ldquo;Add a Generic Destination\u0026rdquo; check the steps for Discord, it\u0026rsquo;s the same \u0026ldquo;Template\u0026rdquo;: \u0026ldquo;Item Added\u0026rdquo;: teams-items.handlebars \u0026ldquo;User Locked Out\u0026rdquo;: teams-users-locked-out.handlebars \u0026ldquo;User\u0026rdquo;: teams-users.handlebars To add a WhatsApp webhook:\nNot as easy as the others.\nYou need to connect your WhatsApp account as if you were logging on WhatsApp Web.\nTo achieve this, you\u0026rsquo;re going to use another docker-compose to self-host a WhatsApp HTTP API. I\u0026rsquo;m using this API.\nFollow these steps:\n$ cd /opt/chill $ wget https://raw.githubusercontent.com/garnajee/home-server/master/docker-compose-whatsapp.yml $ docker-compose --file docker-compose-whatsapp.yml up -d Note that the docker-compose I provided is not really optimized, you can add environment variable to better configure. You can check the documentation here.\nFeel free to modify and perhaps make a pull request!\nThen follow the official from step 3 to 5. For any further information, like the id of a contact or a group, please read the documentation.\nGo back to Jellyfin \u0026gt; Plugin \u0026gt; Webhook:\nclick on \u0026ldquo;Add Generic Form Destination\u0026rdquo; \u0026ldquo;Webhook Url\u0026rdquo;: the internal docker ip, if you don\u0026rsquo;t change anything in the docker-compose it should be: http://10.10.66.200:3000/api/sendText then check what you want depending on the template Then copy and paste the template you want:\n\u0026ldquo;Item Added\u0026rdquo;: whatsapp-items.handlebars (very basic) \u0026ldquo;User created/deleted\u0026rdquo;: whatsapp-basic-user.handlebars And finally you need to 2 Headers:\n\u0026ldquo;Key\u0026rdquo;: \u0026ldquo;accept\u0026rdquo;, \u0026ldquo;Value\u0026rdquo;: \u0026ldquo;application/json\u0026rdquo; \u0026ldquo;Key\u0026rdquo;: \u0026ldquo;Content-Type\u0026rdquo;, \u0026ldquo;Value\u0026rdquo;: \u0026ldquo;application/json\u0026rdquo; Please note, that we cannot send images with this API (it\u0026rsquo;s a paid feature).\n(If you want to send the poster, refer to the new method (Global Webhook).)\nAnd that\u0026rsquo;s it, you can save.\nNew method WhatsApp Webhook Please refer to the whatsapp-api/README to install and configure this API.\nThis API allows you to send much more things than the previous one.\nFake Ratio If you need to fake your upload in order to have a ratio \u0026gt;= 1, you can use Ratio.py.\nI don\u0026rsquo;t recommend using this indefinitely, please consider sharing to the community.\n","permalink":"https://garnajee.github.io/posts/home-server/","summary":"A guide to create your perfect home server.","title":"Home Server"},{"content":"Krunker settings Main:\n{\u0026#34;oldBrowser\u0026#34;:false,\u0026#34;shadows\u0026#34;:false,\u0026#34;postProcessing\u0026#34;:false,\u0026#34;scaleUI\u0026#34;:0.8,\u0026#34;showKillC\u0026#34;:true,\u0026#34;crosshairSho\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;crosshairImage\u0026#34;:\u0026#34;https://cdn.discordapp.com/attachments/582993755683029023/592294954349363210/smallno.png\u0026#34;,\u0026#34;crosshairColor\u0026#34;:\u0026#34;#00ff00\u0026#34;,\u0026#34;crosshairThick\u0026#34;:1,\u0026#34;crosshairLen\u0026#34;:40,\u0026#34;crosshairDot\u0026#34;:false,\u0026#34;sensitivityXCntrl\u0026#34;:1,\u0026#34;sensitivityYCntrl\u0026#34;:1,\u0026#34;aimSensitivityXCntrl\u0026#34;:1,\u0026#34;aimSensitivityYCntrl\u0026#34;:1,\u0026#34;sensitivityXMbl\u0026#34;:1,\u0026#34;sensitivityYMbl\u0026#34;:1,\u0026#34;aimSensitivityXMbl\u0026#34;:1,\u0026#34;aimSensitivityYMbl\u0026#34;:1,\u0026#34;gradSpeedMbl\u0026#34;:false,\u0026#34;fov\u0026#34;:120,\u0026#34;fpsFOV\u0026#34;:100,\u0026#34;weaponBob\u0026#34;:0,\u0026#34;weaponLean\u0026#34;:0.9,\u0026#34;weaponOffY\u0026#34;:1,\u0026#34;showSpdLines\u0026#34;:0.5,\u0026#34;progOffY\u0026#34;:8,\u0026#34;scopeBorders\u0026#34;:false,\u0026#34;controls\u0026#34;:{\u0026#34;sBoardKey\u0026#34;:222,\u0026#34;meleeKey\u0026#34;:9,\u0026#34;streakKeys\u0026#34;:[52,53,54],\u0026#34;moveKeys\u0026#34;:[90,null,81],\u0026#34;toggleSets\u0026#34;:[-1,-1,-1,-1,-1,-1]},\u0026#34;customize\u0026#34;:{\u0026#34;scopes\u0026#34;:[[\u0026#34;scope-whithout-borders\u0026#34;,\u0026#34;https://cdn.discordapp.com/attachments/582993755683029023/592294954349363210/smallno.png\u0026#34;]],\u0026#34;loadouts\u0026#34;:{\u0026#34;Preset1\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:3,\u0026#34;savedScope\u0026#34;:null,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:15,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:2,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;0\\\u0026#34;:502,\\\u0026#34;1\\\u0026#34;:1169,\\\u0026#34;3\\\u0026#34;:1661}\u0026#34;},\u0026#34;assault\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:0,\u0026#34;savedScope\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:15,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:0,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;1\\\u0026#34;:1169}\u0026#34;},\u0026#34;sniper\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:3,\u0026#34;savedScope\u0026#34;:null,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:10,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:1,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;0\\\u0026#34;:502,\\\u0026#34;1\\\u0026#34;:1169,\\\u0026#34;3\\\u0026#34;:1661}\u0026#34;}}}} ","permalink":"https://garnajee.github.io/posts/settings/","summary":"Krunker settings Main:\n{\u0026#34;oldBrowser\u0026#34;:false,\u0026#34;shadows\u0026#34;:false,\u0026#34;postProcessing\u0026#34;:false,\u0026#34;scaleUI\u0026#34;:0.8,\u0026#34;showKillC\u0026#34;:true,\u0026#34;crosshairSho\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;crosshairImage\u0026#34;:\u0026#34;https://cdn.discordapp.com/attachments/582993755683029023/592294954349363210/smallno.png\u0026#34;,\u0026#34;crosshairColor\u0026#34;:\u0026#34;#00ff00\u0026#34;,\u0026#34;crosshairThick\u0026#34;:1,\u0026#34;crosshairLen\u0026#34;:40,\u0026#34;crosshairDot\u0026#34;:false,\u0026#34;sensitivityXCntrl\u0026#34;:1,\u0026#34;sensitivityYCntrl\u0026#34;:1,\u0026#34;aimSensitivityXCntrl\u0026#34;:1,\u0026#34;aimSensitivityYCntrl\u0026#34;:1,\u0026#34;sensitivityXMbl\u0026#34;:1,\u0026#34;sensitivityYMbl\u0026#34;:1,\u0026#34;aimSensitivityXMbl\u0026#34;:1,\u0026#34;aimSensitivityYMbl\u0026#34;:1,\u0026#34;gradSpeedMbl\u0026#34;:false,\u0026#34;fov\u0026#34;:120,\u0026#34;fpsFOV\u0026#34;:100,\u0026#34;weaponBob\u0026#34;:0,\u0026#34;weaponLean\u0026#34;:0.9,\u0026#34;weaponOffY\u0026#34;:1,\u0026#34;showSpdLines\u0026#34;:0.5,\u0026#34;progOffY\u0026#34;:8,\u0026#34;scopeBorders\u0026#34;:false,\u0026#34;controls\u0026#34;:{\u0026#34;sBoardKey\u0026#34;:222,\u0026#34;meleeKey\u0026#34;:9,\u0026#34;streakKeys\u0026#34;:[52,53,54],\u0026#34;moveKeys\u0026#34;:[90,null,81],\u0026#34;toggleSets\u0026#34;:[-1,-1,-1,-1,-1,-1]},\u0026#34;customize\u0026#34;:{\u0026#34;scopes\u0026#34;:[[\u0026#34;scope-whithout-borders\u0026#34;,\u0026#34;https://cdn.discordapp.com/attachments/582993755683029023/592294954349363210/smallno.png\u0026#34;]],\u0026#34;loadouts\u0026#34;:{\u0026#34;Preset1\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:3,\u0026#34;savedScope\u0026#34;:null,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:15,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:2,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;0\\\u0026#34;:502,\\\u0026#34;1\\\u0026#34;:1169,\\\u0026#34;3\\\u0026#34;:1661}\u0026#34;},\u0026#34;assault\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:0,\u0026#34;savedScope\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:15,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:0,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;1\\\u0026#34;:1169}\u0026#34;},\u0026#34;sniper\u0026#34;:{\u0026#34;skinColIndex\u0026#34;:-1,\u0026#34;hairCol\u0026#34;:-1,\u0026#34;chatCol\u0026#34;:-1,\u0026#34;dyeIndex\u0026#34;:-1,\u0026#34;faceIndex\u0026#34;:1904,\u0026#34;shoeIndex\u0026#34;:-1,\u0026#34;attachIndex\u0026#34;:0,\u0026#34;reticleIndex\u0026#34;:8,\u0026#34;savedReticle\u0026#34;:null,\u0026#34;scopeIndex\u0026#34;:3,\u0026#34;savedScope\u0026#34;:null,\u0026#34;meleeIndex\u0026#34;:-1,\u0026#34;backIndex\u0026#34;:1469,\u0026#34;hatIndex\u0026#34;:1434,\u0026#34;waistIndex\u0026#34;:-1,\u0026#34;secondaryInd\u0026#34;:10,\u0026#34;kcStatIndex\u0026#34;:-1,\u0026#34;classindex\u0026#34;:1,\u0026#34;skins\u0026#34;:\u0026#34;{\\\u0026#34;0\\\u0026#34;:502,\\\u0026#34;1\\\u0026#34;:1169,\\\u0026#34;3\\\u0026#34;:1661}\u0026#34;}}}} ","title":"My Settings"},{"content":"Youtube Skyrroz\nPhilippe Etchebest\nMovies Tracker tv time\nInformation AlloCiné\nTMDB\nOthers [//]: this should be a comment\n","permalink":"https://garnajee.github.io/links/","summary":"Youtube Skyrroz\nPhilippe Etchebest\nMovies Tracker tv time\nInformation AlloCiné\nTMDB\nOthers [//]: this should be a comment","title":"Links"},{"content":"Hello There! General Kenobi... Welcome to my blog!\nThis is my personal website.\nI use it to note, save, share, etc what I found either on the internet or by myself, and obviously mostly computer-related.\nWho am I I won\u0026rsquo;t repeat myself 😉, so please, check my LinkedIn profile.\nIf you want more information, don\u0026rsquo;t be afraid to contact me via the contact form!\n","permalink":"https://garnajee.github.io/about/","summary":"Hello There! General Kenobi... Welcome to my blog!\nThis is my personal website.\nI use it to note, save, share, etc what I found either on the internet or by myself, and obviously mostly computer-related.\nWho am I I won\u0026rsquo;t repeat myself 😉, so please, check my LinkedIn profile.\nIf you want more information, don\u0026rsquo;t be afraid to contact me via the contact form!","title":"About"},{"content":"I\u0026rsquo;ll get back to you as soon as possible!\n","permalink":"https://garnajee.github.io/thankyou/","summary":"I\u0026rsquo;ll get back to you as soon as possible!","title":"Thank you for submitting your message!"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary. Guide Follow Quick Start guide to setup and create a new site.\nNote: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\nMake sure you install latest version of hugo(\u0026gt;=0.83.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ncd themes/PaperMod git pull Method 2 you can use as submodule with\ngit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ngit submodule update --remote --merge Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\nMaster Branch (Latest) v6.0 v5.0 v4.0 v3.0 v2.0 v1.0 Finally \u0026hellip; Add in config.yml:\ntheme: \u0026#34;PaperMod\u0026#34; Method 4 Install Go programming language in your operating system.\nIntialize your own hugo mod\nhugo mod init YOUR_OWN_GIT_REPOSITORY Add PaperMod in your config.yml file module: imports: - path: github.com/adityatelange/hugo-PaperMod Update theme hugo mod get -u Quick Links Papermod - Features Papermod - FAQs Papermod - Variables Papermod - Icons ChangeLog Sample config.yml Example Site Structure is present here: exampleSite\nUse appropriately\nbaseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026#34;https://twitter.com/\u0026#34; - name: stackoverflow url: \u0026#34;https://stackoverflow.com\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Sample Page.md --- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; ","permalink":"https://garnajee.github.io/posts/examples-hugo/","summary":"Read Install and Update instructions here","title":"Examples HUGO"},{"content":" Full Name* Email* Subject* Message Send ","permalink":"https://garnajee.github.io/contact/","summary":" Full Name* Email* Subject* Message Send ","title":"Contact"}]